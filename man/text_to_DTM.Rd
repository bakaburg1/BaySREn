% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NLP.R
\name{text_to_DTM}
\alias{text_to_DTM}
\title{Convert a vector of text documents into a Document Term Matrix}
\usage{
text_to_DTM(
  corpus,
  min.freq = 20,
  ids = 1:length(corpus),
  freq.subset.ids = ids,
  included.pos = c("Noun", "Verb", "Adjective"),
  tokenize.fun = tokenize_text,
  add.ngrams = TRUE,
  aggr.synonyms = TRUE,
  n.gram.thresh = 0.5,
  syn.thresh = 0.9,
  label = "TERM__",
  na.as.missing = TRUE
)
}
\arguments{
\item{corpus}{A vector of text documents.}

\item{min.freq}{Minimum number of document in which a term need to be present
to be considered.}

\item{ids}{Identification ID of documents.}

\item{freq.subset.ids}{IDs to consider when computing term frequency.}

\item{included.pos}{Part of speech (POS) to consider when building the DTM.
See \code{\link[lexicon:hash_grady_pos]{lexicon::hash_grady_pos}()} for a
list of recognized POS.}

\item{tokenize.fun}{Function to use to clean up text.}

\item{add.ngrams}{Whether to search and add non-consecutive n-grams. See
\code{\link{DTM.add_ngrams}}.}

\item{aggr.synonyms}{Whether to aggregate terms which almost always appear
together. See \code{\link{DTM.aggr_synonyms}()}.}

\item{n.gram.thresh}{The threshold to use to identify the network of
non-consecutive n-grams if \code{add.ngrams} is \code{TRUE}.}

\item{syn.thresh}{The threshold to use to identify the network of terms to
aggregate if \code{aggr.synonyms} is \code{TRUE}.}

\item{label}{A label to prepend to term columns in the DTM.}

\item{na.as.missing}{Whether to set as \code{NA} the DTM cells for empty
document. If \code{FALSE} those cells will be set to zero.}
}
\value{
A Document Term Matrix with a row for each document and a column for
the terms plus a column with the document IDs.
}
\description{
A Document Term Matrix (DTM) is a structure describing the association of a
term to a document. In this case, we used a binary matrix with ones if a term
is present in a document and one otherwise.
}
\details{
Before computing the DTM, document terms are cleaned, tokenized and
lemmatized, and stop-words are removed.

To reduce noise, only terms that appear in a fraction of documents higher
than \code{min.freq} are considered. The function also uses cosine similarity
to identify relevant subclusters of related terms or redundant ones.
}
\examples{
\dontrun{

Records <- import_data(get_session_files("Session1")$Records)

Title_DTM <- with(
  Records,
  text_to_DTM(Title,
    min.freq = 20, label = "TITLE__", ids = ID,
    freq.subset.ids = ID[Target \%in\% c("y", "n")]
  )
)
}
}
