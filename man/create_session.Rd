% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Record_management.R
\name{create_session}
\alias{create_session}
\title{Create a Session starting from an annotation data set.}
\usage{
create_session(
  Records,
  session_name,
  sessions_folder = getOption("baysren.sessions_folder"),
  DTM = NULL,
  dup_session_action = c("skip", "stop", "silent", "add", "replace"),
  use_time_stamp = TRUE
)
}
\arguments{
\item{Records}{An annotation data frame.}

\item{session_name}{A character string to label the session. Usually is
Session followed by a number, without white spaces.}

\item{sessions_folder}{The path to the folder where all sessions are stored.}

\item{DTM}{An already existing DTM matrix (see
\code{\link{create_training_set}()} and \code{\link{text_to_DTM}()}).}

\item{dup_session_action}{What to do if a session with the same name already
exists. the options are: skip (if the session exists do nothing but raise a
warning), stop (raise an error), silent (like skip but without warnings),
add (create a new session marking that is a replicate of an existing one),
replace (overwrite the existing session).}

\item{use_time_stamp}{Add a times tamp to the original annotation file name.}
}
\value{
The path to the created session folder.
}
\description{
A session is identified by the subsequent iteration of automatic labelling and
manual review. It is associated with a folder where the original annotation
file (with the initial manual classification) is stored, plus its updates
after each classification iteration and supplemental files containing the
Document Term Matrix (DTM), a summary of each classification iteration and the
posterior samples of the Bayesian predictions.
}
\examples{

\dontrun{
journal <- perform_search_session(
query = query, year_query = year_filter,
session_name = 'Session1', query_name = 'Query1',
records_folder = 'Records',
journal = 'Session_journal.csv')

record_files <- extract_source_file_paths(journal)

Annotation_data <- create_annotation_file(record_files)

create_session(Annotation_data)
}
}
