% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Record_search.R
\name{search_ieee}
\alias{search_ieee}
\title{Automatic search on IEEE database}
\usage{
search_ieee(
  query,
  year_query = NULL,
  additional_fields = NULL,
  api_key = getOption("baysren.ieee_api_key"),
  allow_web_scraping = TRUE,
  wait_for = 20,
  record_limit = NULL
)
}
\arguments{
\item{query}{A boolean query with AND/OR/NOT operators, brackets for term
grouping and quotation marks for n-grams.}

\item{year_query}{A year based filtering query. See
\code{\link{clean_date_filter_arg}} for more info.}

\item{additional_fields}{Additional fields to add to the query. Will not be
normalized, so it must already follow WOS specific syntax.}

\item{api_key}{Necessary to use IEEE APIs. See details.}

\item{allow_web_scraping}{If \code{api_key} is \code{NULL}, web scraping can
be attempted to collect the records. This approach is not suggested in
production and may fail with a large number of results. See Details.}

\item{wait_for}{If web scraping is used, a certain amount of time is needed
to let the IEEE page load completely before collecting the results. This
delay depends on the user network and browser speed, thus the default 20
seconds may not be sufficient.}

\item{record_limit}{A limit on the number of records collected.}
}
\value{
A data frame of records.
}
\description{
Perform a search on \url{https://ieeexplore.ieee.org/Xplore/home.jsp}.
}
\details{
If an API key is available, the IEEE API will be used, otherwise Google
Chrome APIs will be used to scrape records simulating a manual user search.
This second method is not ensured to work and IEEE may blacklist your IP if
abused.
}
\examples{
\dontrun{
# Initial query to be built on domain knowledge. It accepts OR, AND, NOT
# boolean operators and round brackets to group terms.
query <- '((model OR models OR modeling OR network OR networks) AND
(dissemination OR transmission OR spread OR diffusion) AND (nosocomial OR
hospital OR "long-term-care" OR "long term care" OR "longterm care" OR
"long-term care" OR "healthcare associated") AND (infection OR resistance OR
resistant))'

# Year filter. The framework converts it to the API-specific format seamlessly.
# common logical comparators can be used, i.e. <, <=, >, >=, while dashes
# denotes inclusive date intervals. A single year restricts results to one year
# period.
year_filter <- "2010-2020"

records <- search_ieee(query, year_filter)
}
}
