% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Record_search.R
\name{search_wos}
\alias{search_wos}
\title{Automatic search on Web Of Science database}
\usage{
search_wos(
  query,
  year_query = NULL,
  additional_fields = NULL,
  api_key = getOption("baysren.wos_api_key"),
  parallel = TRUE,
  parse_query = TRUE,
  ...
)
}
\arguments{
\item{query}{A boolean query with AND/OR/NOT operators, brackets for term
grouping and quotation marks for n-grams.}

\item{year_query}{A year based filtering query. See
\code{\link{clean_date_filter_arg}} for more info.}

\item{additional_fields}{Additional fields to add to the query. Won't be
normalized so it must already follow WOS specific syntax.}

\item{api_key}{Necessary to access WOS database. See Details.}

\item{parallel}{Whether to use parallel execution to speed up result
collection. Works only on Unix-based systems.}

\item{parse_query}{Whether to normalize the query into WOS specific syntax.
If \code{FALSE}, it is assumed that the query is already in the format
required by WOS API.}

\item{...}{Additional arguments for
\code{\link[wosr:pull_wos]{wosr::pull_wos}}, excluding \code{query} and
\code{sid}.}
}
\value{
A data frame of records.
}
\description{
This function performs an API search on Web Of Science (WOS), taking care of
the authorization steps and query normalization. The user is needed to
provide an API key by accessing \url{https://www.webofknowledge.com} with an
authorized account (e.g. access through an academic VPN or proxy). The key
can be found in the URL once the user is authorized. The key has a time
limit, so it will need to be regenerated. The function is a wrapper over
\code{\link[wosr:pull_wos]{wosr::pull_wos}}.
}
\examples{

# Initial query to be built on domain knowledge. It accepts OR, AND, NOT
# boolean operators and round brackets to group terms.
query <- '((model OR models OR modeling OR network OR networks) AND
(dissemination OR transmission OR spread OR diffusion) AND (nosocomial OR
hospital OR "long-term-care" OR "long term care" OR "longterm care" OR
"long-term care" OR "healthcare associated") AND (infection OR resistance OR
resistant))'

# Year filter. The framework converts it to the API-specific format seamlessly.
# common logical comparators can be used, i.e. <, <=, >, >=, while dashes
# denotes inclusive date intervals. A single year restricts results to one year
# period.
year_filter <- "2010-2020"

records <- search_wos(query, year_filter)

}
